from fastapi import APIRouter
from factory_agents.archivist.principles_loader import summarize_principles
from factory_agents.archivist.file_access import safe_read, governed_write, list_dir

router = APIRouter()

@router.get("/principles")
def get_principles():
    """Expose current doctrinal principles."""
    return {"doctrine": summarize_principles()}

@router.post("/read")
def read_file(path: str):
    """Governed read endpoint."""
    return {"result": safe_read(path)}

@router.post("/write")
def write_file(path: str, content: str):
    """Governed write endpoint."""
    return {"result": governed_write(path, content)}

@router.post("/list")
def list_files(path: str | None = None):
    """List files/directories within governed roots."""
    return {"result": list_dir(path)}
# Auto-generated by Junie Task Executor
# curator_api.py
