name: Agent Factory CI

on:
  push:
    branches: ["**"]
  pull_request:

permissions:
  contents: read

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov sqlalchemy python-dotenv fastapi prometheus-client mypy black isort ruff pyyaml
          pip install -r requirements.txt || true

      - name: Lint & Type Check
        run: |
          black --version
          isort --version
          ruff --version
          mkdir -p reports/ci
          black --check . | tee reports/ci/black.txt || true
          isort --check-only . | tee reports/ci/isort.txt || true
          ruff check . | tee reports/ci/ruff.txt || true
          mypy --ignore-missing-imports --install-types --non-interactive src || true

      - name: Run pytest with coverage
        run: |
          mkdir -p artifacts reports/ci
          set -o pipefail
          pytest -q --cov=src --cov-report=term-missing --cov-report=xml:reports/ci/coverage.xml | tee artifacts/pytest_output.log

      - name: Upload Pytest Output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-output
          path: artifacts/pytest_output.log
          if-no-files-found: warn

      - name: Phase 2 Validation
        run: |
          if [ -f scripts/validate_phase2.py ]; then
            python scripts/validate_phase2.py
          else
            echo "scripts/validate_phase2.py not found; skipping Phase 2 validation."
            exit 1
          fi

      - name: Knowledge Base Registry Validation
        run: |
          if [ -f scripts/validate_kba_registry.py ]; then
            mkdir -p artifacts
            python scripts/validate_kba_registry.py --root . --registry registry/metadata_index.json --audit-dir validation/logs > artifacts/kba_validation.log
          else
            echo "scripts/validate_kba_registry.py not found; please add validator."
            exit 1
          fi

      - name: Run KBA Make target
        run: make validate-kba

      - name: Upload KBA Validation Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kba-audit
          path: artifacts/kba_validation.log
          if-no-files-found: warn

      - name: Upload AUDIT logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: audit-logs
          path: validation/logs/*
          if-no-files-found: warn

      - name: Phase 4â€“9 Stability Validation
        run: |
          python scripts/phase4_9_stability.py

      - name: Upload Stability Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: phase4-9-stability-report
          path: reports/phase4-9_stability_report_*.md
          if-no-files-found: warn
